@rootUrl = http://localhost:8080
@accessToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imd1bGFAbWFpbGluYXRvci5jb20iLCJpYXQiOjE3NTMzNzI5MjQsImV4cCI6MTc1MzM3MzgyNH0.LWTduySlJwOdB3jCrDQw-HpT1BTob4yK6uGznsbYhsA
#API LIST

### CREDENTIAL FOR TESTING

### USER - gula@mailinator.com - Testing@testing12c3@

### ADMIN - bhavesh.sadhu@gmail.com - Testingtesting@123

###CHECK SERVER STATUS
GET {{rootUrl}}

### User Registration
POST {{rootUrl}}/api/v1/auth/register
Content-Type: application/json

{
    "fname":"Bhavesh",
    "lname":"Sadhu",
    "email":"bhavesh2.sadhu@gmail.com",
    "phone":"0123456789",
    "password":"TesAAa@123TesAAa@123"
}

### User Verification from Email
POST {{rootUrl}}/api/v1/auth/activate-user
Content-Type: application/json

{
    "token":"1cb97654-f9a9-4d77-949d-dc0094d84587",
    "sessionId":"1cb97654-f9a9-4d77-949d-dc0094d84587"
}

### LOGIN USER
POST {{rootUrl}}/api/v1/auth/login
Content-Type: application/json

{
    "email":"gula@mailinator.com",
    "password":"Testing@testing12c3@"
}

### USER PROFILE
GET {{rootUrl}}/api/v1/users/profile
Authorization: Bearer {{accessToken}}
### RENEW ACCESSJWT
GET {{rootUrl}}/api/v1/auth/renew-jwt
Authorization: Bearer {{accessToken}}

### Logout User
GET {{rootUrl}}/api/v1/auth/logout
Authorization: Bearer {{accessToken}}

### FORGET PASSWORD 
POST {{rootUrl}}/api/v1/users/forget-password
Content-Type: application/json

{
    "email":"bhavesh.sadhu@gmail.com"
    
}

### Reset Password
POST {{rootUrl}}/api/v1/users/reset-password
Content-Type: application/json

{
    "token":"{{accessToken}}"
}

### SET NEW PASSWORD
POST {{rootUrl}}/api/v1/users/setNewPassword
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
    "password":"Testingtesting@123"
}

### Books

### Create a new book
POST {{rootUrl}}/api/v1/books
Content-Type: application/json
Authorization: Bearer {{accessToken}}

{
  "title": "Eloquent JavaScript",
  "author": "Marijn Haverbeke",
  "isbn": "9781593279507",
  "category": "Programming",
  "description": "A Modern Introduction to Programming covering JavaScript fundamentals, advanced topics, and real-world projects.",
  "quantity": 10,
  "available": 10,
  "coverImage": "eloquent-js.jpg"
}

### Get all books to display
GET {{rootUrl}}/api/v1/books/getdisplaybooks


### Get all books - IF ROLE=ADMIN GET ALL BOOKS, IF ROLE=USER GET ONLY AVAILABLE BOOKS
GET {{rootUrl}}/api/v1/books
Authorization: Bearer {{accessToken}}

### Get a single book by ID
GET {{rootUrl}}/api/v1/books/683ef5c53f265fce08d8d8bd
Authorization: Bearer {{accessToken}}

### Update a book by ID
PUT {{rootUrl}}/api/v1/books
Content-Type: application/json
Authorization: Bearer {{accessToken}}

{
    "_id":"683ef5c53f265fce08d8d8bd",
  "title": "The Alchemist - Updated",
  "available": 3,
  "lastUpdatedBy": "660e2a54bb12a2d52c3f39a4"
}

### Delete a book by ID
DELETE {{rootUrl}}/api/v1/books/683ef5c53f265fce08d8d8bd
Authorization: Bearer {{accessToken}}

### Search books by keyword
GET {{rootUrl}}/api/v1/books/search/alchemist
Authorization: Bearer {{accessToken}}

### Delete an uploaded image file from a book
DELETE {{rootUrl}}/api/v1/books/68589947cbb5060dd0aef374/uploaded-file
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "filePath": "/uploads/1750636890728-download.jpeg"
}

### Borrow Books
POST {{rootUrl}}/api/v1/books/borrow
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "userId": "6880aca7fe576eb0f753b54a",
  "loanPeriod": 14,
  "books": [
    {
      "_id": "688235e0a4c39a732cae4099",
      "title": "Clean Code",
      "coverImage": "/uploads/1753364135802-0008508178-L.jpg",
      "quantity":"2"
    },
    {
      "_id": "688235e0a4c39a732cae409a",
      "title": "Eloquent JavaScript",
      "coverImage": "/uploads/1753364188458-0009245523-L.jpg",
      "quantity":"2"
    }
  ]
}
